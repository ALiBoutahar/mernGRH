{"ast":null,"code":"var _jsxFileName = \"D:\\\\SAVE D\\\\github project\\\\mernGRH\\\\client\\\\src\\\\component\\\\pages\\\\absance\\\\addAbsance.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GestionAbsences(props) {\n  _s();\n\n  const [personnes, setPersonnes] = useState(props.personnes);\n  const [absences, setAbsences] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n\n  const handleAbsenceChange = (personneId, date) => {\n    const updatedPersonnes = personnes.map(personne => {\n      if (personne.id === personneId) {\n        // Recherche de l'index de la date dans les absences de la personne\n        const absenceIndex = personne.absences.findIndex(absence => absence.date === date); // Si la date n'existe pas, ajoutez-la, sinon, supprimez-la\n\n        if (absenceIndex === -1) {\n          personne.absences.push({\n            date,\n            checked: true\n          });\n        } else {\n          personne.absences.splice(absenceIndex, 1);\n        }\n      }\n\n      return personne;\n    });\n    setPersonnes(updatedPersonnes);\n  };\n\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n\n  const handleAddDate = () => {\n    if (selectedDate && !absences.includes(selectedDate)) {\n      setAbsences([...absences, selectedDate]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestion des absences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"S\\xE9lectionnez la date :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddDate,\n        children: \"Ajouter la date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Liste des dates :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: absences.map(date => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: date\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Liste des personnes :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: personnes.map(personne => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [personne.nom, \" \", personne.prenom, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: absences.map(date => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [date, \" - Absent :\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: personne.absences.some(absence => absence.date === date && absence.checked),\n                  onChange: () => handleAbsenceChange(personne.id, date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, personne.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GestionAbsences, \"NHa7eU7LZFXVAXYS7fVBYAKH/OY=\");\n\n_c = GestionAbsences;\nexport default GestionAbsences;\n\nvar _c;\n\n$RefreshReg$(_c, \"GestionAbsences\");","map":{"version":3,"sources":["D:/SAVE D/github project/mernGRH/client/src/component/pages/absance/addAbsance.jsx"],"names":["React","useState","GestionAbsences","props","personnes","setPersonnes","absences","setAbsences","selectedDate","setSelectedDate","handleAbsenceChange","personneId","date","updatedPersonnes","map","personne","id","absenceIndex","findIndex","absence","push","checked","splice","handleDateChange","e","target","value","handleAddDate","includes","nom","prenom","some"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction GestionAbsences(props) {\r\n  const [personnes, setPersonnes] = useState(props.personnes);\r\n  const [absences, setAbsences] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n\r\n  const handleAbsenceChange = (personneId, date) => {\r\n    const updatedPersonnes = personnes.map((personne) => {\r\n      if (personne.id === personneId) {\r\n        // Recherche de l'index de la date dans les absences de la personne\r\n        const absenceIndex = personne.absences.findIndex((absence) => absence.date === date);\r\n\r\n        // Si la date n'existe pas, ajoutez-la, sinon, supprimez-la\r\n        if (absenceIndex === -1) {\r\n          personne.absences.push({ date, checked: true });\r\n        } else {\r\n          personne.absences.splice(absenceIndex, 1);\r\n        }\r\n      }\r\n      return personne;\r\n    });\r\n\r\n    setPersonnes(updatedPersonnes);\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setSelectedDate(e.target.value);\r\n  };\r\n\r\n  const handleAddDate = () => {\r\n    if (selectedDate && !absences.includes(selectedDate)) {\r\n      setAbsences([...absences, selectedDate]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Gestion des absences</h1>\r\n      <div>\r\n        <label>SÃ©lectionnez la date :</label>\r\n        <input type=\"date\" value={selectedDate} onChange={handleDateChange} />\r\n        <button onClick={handleAddDate}>Ajouter la date</button>\r\n      </div>\r\n      <div>\r\n        <h2>Liste des dates :</h2>\r\n        <ul>\r\n          {absences.map((date) => (\r\n            <li key={date}>{date}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h2>Liste des personnes :</h2>\r\n        <ul>\r\n          {personnes.map((personne) => (\r\n            <li key={personne.id}>\r\n              {personne.nom} {personne.prenom}\r\n              <ul>\r\n                {absences.map((date) => (\r\n                  <li key={date}>\r\n                    <label>\r\n                      {date} - Absent :{' '}\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={\r\n                          personne.absences.some(\r\n                            (absence) => absence.date === date && absence.checked\r\n                          )\r\n                        }\r\n                        onChange={() => handleAbsenceChange(personne.id, date)}\r\n                      />\r\n                    </label>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GestionAbsences;\r\n"]},"metadata":{},"sourceType":"module"}