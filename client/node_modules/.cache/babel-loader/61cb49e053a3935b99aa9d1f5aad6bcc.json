{"ast":null,"code":"var _jsxFileName = \"D:\\\\SAVE D\\\\github project\\\\mernGRH\\\\client\\\\src\\\\component\\\\pages\\\\absance\\\\addAbsance.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GestionAbsences() {\n  _s();\n\n  const [personnes, setPersonnes] = useState([]);\n  const [personnesSelectionnees, setPersonnesSelectionnees] = useState([]);\n  const [nouvelleAbsence, setNouvelleAbsence] = useState({\n    date: '',\n    motif: ''\n  });\n  useEffect(() => {\n    // Récupérer la liste des personnes depuis le serveur en utilisant une requête GET\n    axios.get(\"http://localhost:5000/personnes\").then(res => {\n      setPersonnes(res.data.data);\n    });\n  }, []);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNouvelleAbsence({ ...nouvelleAbsence,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Envoyer les données de l'absence au serveur\n\n    axios.post(\"http://localhost:5000/ajouter-absence\", {\n      personnesSelectionnees: personnesSelectionnees,\n      date: nouvelleAbsence.date,\n      motif: nouvelleAbsence.motif\n    }).then(res => {\n      // Mettre à jour l'état local avec les nouvelles données\n      setPersonnes(res.data.data); // Réinitialiser le formulaire d'ajout d'absence\n\n      setNouvelleAbsence({\n        date: '',\n        motif: ''\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestion des absences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Personnes :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"personnesSelectionnees\",\n          value: personnesSelectionnees,\n          onChange: e => setPersonnesSelectionnees(e.target.value),\n          multiple: true,\n          children: personnes.map((personne, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: personne.id,\n            children: personne.nom\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: nouvelleAbsence.date,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Motif :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"motif\",\n          value: nouvelleAbsence.motif,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ajouter absence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GestionAbsences, \"Em1HSG48ABc+8dgmGR6OG8tGitw=\");\n\n_c = GestionAbsences;\nexport default GestionAbsences;\n\nvar _c;\n\n$RefreshReg$(_c, \"GestionAbsences\");","map":{"version":3,"sources":["D:/SAVE D/github project/mernGRH/client/src/component/pages/absance/addAbsance.jsx"],"names":["React","useState","useEffect","axios","GestionAbsences","personnes","setPersonnes","personnesSelectionnees","setPersonnesSelectionnees","nouvelleAbsence","setNouvelleAbsence","date","motif","get","then","res","data","handleInputChange","e","name","value","target","handleSubmit","preventDefault","post","map","personne","index","id","nom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction GestionAbsences() {\r\n  const [personnes, setPersonnes] = useState([]);\r\n  const [personnesSelectionnees, setPersonnesSelectionnees] = useState([]);\r\n  const [nouvelleAbsence, setNouvelleAbsence] = useState({\r\n    date: '',\r\n    motif: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Récupérer la liste des personnes depuis le serveur en utilisant une requête GET\r\n    axios.get(\"http://localhost:5000/personnes\")\r\n      .then(res => {\r\n        setPersonnes(res.data.data);\r\n      });\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNouvelleAbsence({ ...nouvelleAbsence, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Envoyer les données de l'absence au serveur\r\n    axios.post(\"http://localhost:5000/ajouter-absence\", {\r\n      personnesSelectionnees: personnesSelectionnees,\r\n      date: nouvelleAbsence.date,\r\n      motif: nouvelleAbsence.motif\r\n    })\r\n    .then(res => {\r\n      // Mettre à jour l'état local avec les nouvelles données\r\n      setPersonnes(res.data.data);\r\n      // Réinitialiser le formulaire d'ajout d'absence\r\n      setNouvelleAbsence({ date: '', motif: '' });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Gestion des absences</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Personnes :\r\n          <select\r\n            name=\"personnesSelectionnees\"\r\n            value={personnesSelectionnees}\r\n            onChange={(e) => setPersonnesSelectionnees(e.target.value)}\r\n            multiple\r\n          >\r\n            {personnes.map((personne, index) => (\r\n              <option key={index} value={personne.id}>{personne.nom}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Date :\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={nouvelleAbsence.date}\r\n            onChange={handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Motif :\r\n          <input\r\n            type=\"text\"\r\n            name=\"motif\"\r\n            value={nouvelleAbsence.motif}\r\n            onChange={handleInputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Ajouter absence</button>\r\n      </form>\r\n      {/* Affichez les absences pour chaque personne ici */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GestionAbsences;\r\n"]},"metadata":{},"sourceType":"module"}