{"ast":null,"code":"var _jsxFileName = \"D:\\\\SAVE D\\\\github project\\\\mernGRH\\\\client\\\\src\\\\component\\\\pages\\\\absance\\\\absence.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AfficherAbsences() {\n  _s();\n\n  const [absences, setAbsences] = useState([]);\n  useEffect(() => {\n    // Récupérer les absences depuis le serveur\n    axios.get(\"http://localhost:5000/absences\").then(res => {\n      setAbsences(res.data.data);\n    });\n  }, []); // Fonction pour trier les absences par date puis par personne\n\n  const trierAbsences = () => {\n    const absencesTrie = {}; // Regrouper les absences par date\n\n    absences.forEach(absence => {\n      const date = absence.date;\n      const personne = absence.personne;\n\n      if (!absencesTrie[date]) {\n        absencesTrie[date] = {};\n      }\n\n      absencesTrie[date][personne] = absence.motif;\n    });\n    return absencesTrie;\n  };\n\n  const absencesTriees = trierAbsences();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des Absences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), Object.keys(absencesTriees).map((date, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(absencesTriees).map((date, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), Object.keys(absencesTriees[date]).map((personne, index2) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: absencesTriees[date][personne]\n          }, index2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AfficherAbsences, \"EaVhVVbSORaUZehQxQpuq64M0hg=\");\n\n_c = AfficherAbsences;\nexport default AfficherAbsences;\n\nvar _c;\n\n$RefreshReg$(_c, \"AfficherAbsences\");","map":{"version":3,"sources":["D:/SAVE D/github project/mernGRH/client/src/component/pages/absance/absence.jsx"],"names":["React","useState","useEffect","axios","AfficherAbsences","absences","setAbsences","get","then","res","data","trierAbsences","absencesTrie","forEach","absence","date","personne","motif","absencesTriees","Object","keys","map","index","index2"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,KAAK,CAACI,GAAN,CAAU,gCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACXH,MAAAA,WAAW,CAACG,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAX;AACD,KAHH;AAID,GANQ,EAMN,EANM,CAAT,CAH0B,CAW1B;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1B,UAAMC,YAAY,GAAG,EAArB,CAD0B,CAG1B;;AACAP,IAAAA,QAAQ,CAACQ,OAAT,CAAiBC,OAAO,IAAI;AAC1B,YAAMC,IAAI,GAAGD,OAAO,CAACC,IAArB;AACA,YAAMC,QAAQ,GAAGF,OAAO,CAACE,QAAzB;;AAEA,UAAI,CAACJ,YAAY,CAACG,IAAD,CAAjB,EAAyB;AACvBH,QAAAA,YAAY,CAACG,IAAD,CAAZ,GAAqB,EAArB;AACD;;AAEDH,MAAAA,YAAY,CAACG,IAAD,CAAZ,CAAmBC,QAAnB,IAA+BF,OAAO,CAACG,KAAvC;AACD,KATD;AAWA,WAAOL,YAAP;AACD,GAhBD;;AAkBA,QAAMM,cAAc,GAAGP,aAAa,EAApC;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGQ,MAAM,CAACC,IAAP,CAAYF,cAAZ,EAA4BG,GAA5B,CAAgC,CAACN,IAAD,EAAOO,KAAP,kBAC/B;AAAA,sBAAiBP;AAAjB,aAASO,KAAT;AAAA;AAAA;AAAA;AAAA,kBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACGH,MAAM,CAACC,IAAP,CAAYF,cAAZ,EAA4BG,GAA5B,CAAgC,CAACN,IAAD,EAAOO,KAAP,kBAC/B;AAAA,kCACE;AAAA,sBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGI,MAAM,CAACC,IAAP,CAAYF,cAAc,CAACH,IAAD,CAA1B,EAAkCM,GAAlC,CAAsC,CAACL,QAAD,EAAWO,MAAX,kBACrC;AAAA,sBAAkBL,cAAc,CAACH,IAAD,CAAd,CAAqBC,QAArB;AAAlB,aAASO,MAAT;AAAA;AAAA;AAAA;AAAA,kBADD,CAFH;AAAA,WAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAzDQlB,gB;;KAAAA,gB;AA2DT,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AfficherAbsences() {\r\n  const [absences, setAbsences] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Récupérer les absences depuis le serveur\r\n    axios.get(\"http://localhost:5000/absences\")\r\n      .then(res => {\r\n        setAbsences(res.data.data);\r\n      });\r\n  }, []);\r\n\r\n  // Fonction pour trier les absences par date puis par personne\r\n  const trierAbsences = () => {\r\n    const absencesTrie = {};\r\n\r\n    // Regrouper les absences par date\r\n    absences.forEach(absence => {\r\n      const date = absence.date;\r\n      const personne = absence.personne;\r\n\r\n      if (!absencesTrie[date]) {\r\n        absencesTrie[date] = {};\r\n      }\r\n\r\n      absencesTrie[date][personne] = absence.motif;\r\n    });\r\n\r\n    return absencesTrie;\r\n  };\r\n\r\n  const absencesTriees = trierAbsences();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Liste des Absences</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            {Object.keys(absencesTriees).map((date, index) => (\r\n              <th key={index}>{date}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(absencesTriees).map((date, index) => (\r\n            <tr key={index}>\r\n              <td>{date}</td>\r\n              {Object.keys(absencesTriees[date]).map((personne, index2) => (\r\n                <td key={index2}>{absencesTriees[date][personne]}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AfficherAbsences;\r\n\r\n"]},"metadata":{},"sourceType":"module"}