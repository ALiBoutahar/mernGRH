{"ast":null,"code":"var _jsxFileName = \"D:\\\\SAVE D\\\\github project\\\\mernGRH\\\\client\\\\src\\\\component\\\\pages\\\\absance\\\\addAbsance.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GestionAbsences() {\n  _s();\n\n  const [personnes, setPersonnes] = useState([]);\n  const [personnesSelectionnees, setPersonnesSelectionnees] = useState([]);\n  useEffect(() => {\n    // Récupérer la liste des personnes depuis le serveur\n    axios.post(\"http://localhost:5000/persone\").then(res => {\n      setPersonnes(res.data.data);\n    });\n  }, []);\n\n  const handleCheckboxChange = (e, personne) => {\n    const isChecked = e.target.checked;\n\n    if (isChecked) {\n      setPersonnesSelectionnees([...personnesSelectionnees, personne]);\n    } else {\n      setPersonnesSelectionnees(personnesSelectionnees.filter(p => p !== personne));\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // Envoyer les données d'absence au serveur pour chaque personne sélectionnée\n\n    personnes.forEach(personne => {\n      const isSelected = personnesSelectionnees.includes(personne);\n      const motif = isSelected ? \"Oui\" : \"Non\";\n      axios.post(\"http://localhost:5000/ajouter-absence\", {\n        personne: personne.id,\n        motif\n      }).then(res => {// Mettre à jour l'état local avec les nouvelles données (si nécessaire)\n        // Réinitialiser les cases à cocher (si nécessaire)\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gestion des absences\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"S\\xE9lectionnez les personnes :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), personnes.map((personne, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: `personne-${personne.id}`,\n            checked: personnesSelectionnees.includes(personne),\n            onChange: e => handleCheckboxChange(e, personne)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), personne.nom, \" - \", personnesSelectionnees.includes(personne) ? \"Oui\" : \"Non\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ajouter absence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GestionAbsences, \"uKSHrvXXA4fdoHQuEGZX/MKPm8E=\");\n\n_c = GestionAbsences;\nexport default GestionAbsences;\n\nvar _c;\n\n$RefreshReg$(_c, \"GestionAbsences\");","map":{"version":3,"sources":["D:/SAVE D/github project/mernGRH/client/src/component/pages/absance/addAbsance.jsx"],"names":["React","useState","useEffect","axios","GestionAbsences","personnes","setPersonnes","personnesSelectionnees","setPersonnesSelectionnees","post","then","res","data","handleCheckboxChange","e","personne","isChecked","target","checked","filter","p","handleSubmit","preventDefault","forEach","isSelected","includes","motif","id","map","index","nom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,sBAAD,EAAyBC,yBAAzB,IAAsDP,QAAQ,CAAC,EAAD,CAApE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,KAAK,CAACM,IAAN,CAAW,+BAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACXL,MAAAA,YAAY,CAACK,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAZ;AACD,KAHH;AAID,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,oBAAoB,GAAG,CAACC,CAAD,EAAIC,QAAJ,KAAiB;AAC5C,UAAMC,SAAS,GAAGF,CAAC,CAACG,MAAF,CAASC,OAA3B;;AACA,QAAIF,SAAJ,EAAe;AACbR,MAAAA,yBAAyB,CAAC,CAAC,GAAGD,sBAAJ,EAA4BQ,QAA5B,CAAD,CAAzB;AACD,KAFD,MAEO;AACLP,MAAAA,yBAAyB,CAACD,sBAAsB,CAACY,MAAvB,CAA8BC,CAAC,IAAIA,CAAC,KAAKL,QAAzC,CAAD,CAAzB;AACD;AACF,GAPD;;AASA,QAAMM,YAAY,GAAIP,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACQ,cAAF,GAD0B,CAG1B;;AACAjB,IAAAA,SAAS,CAACkB,OAAV,CAAkBR,QAAQ,IAAI;AAC5B,YAAMS,UAAU,GAAGjB,sBAAsB,CAACkB,QAAvB,CAAgCV,QAAhC,CAAnB;AACA,YAAMW,KAAK,GAAGF,UAAU,GAAG,KAAH,GAAW,KAAnC;AAEArB,MAAAA,KAAK,CAACM,IAAN,CAAW,uCAAX,EAAoD;AAClDM,QAAAA,QAAQ,EAAEA,QAAQ,CAACY,EAD+B;AAElDD,QAAAA;AAFkD,OAApD,EAIChB,IAJD,CAIMC,GAAG,IAAI,CACX;AACA;AACD,OAPD;AAQD,KAZD;AAaD,GAjBD;;AAmBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEU,YAAhB;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGhB,SAAS,CAACuB,GAAV,CAAc,CAACb,QAAD,EAAWc,KAAX,kBACb;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,IAAI,EAAG,YAAWd,QAAQ,CAACY,EAAG,EAFhC;AAGE,YAAA,OAAO,EAAEpB,sBAAsB,CAACkB,QAAvB,CAAgCV,QAAhC,CAHX;AAIE,YAAA,QAAQ,EAAGD,CAAD,IAAOD,oBAAoB,CAACC,CAAD,EAAIC,QAAJ;AAJvC;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGA,QAAQ,CAACe,GAPZ,SAOoBvB,sBAAsB,CAACkB,QAAvB,CAAgCV,QAAhC,IAA4C,KAA5C,GAAoD,KAPxE;AAAA,WAAUc,KAAV;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA/DQzB,e;;KAAAA,e;AAiET,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction GestionAbsences() {\r\n  const [personnes, setPersonnes] = useState([]);\r\n  const [personnesSelectionnees, setPersonnesSelectionnees] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Récupérer la liste des personnes depuis le serveur\r\n    axios.post(\"http://localhost:5000/persone\")\r\n      .then(res => {\r\n        setPersonnes(res.data.data);\r\n      });\r\n  }, []);\r\n\r\n  const handleCheckboxChange = (e, personne) => {\r\n    const isChecked = e.target.checked;\r\n    if (isChecked) {\r\n      setPersonnesSelectionnees([...personnesSelectionnees, personne]);\r\n    } else {\r\n      setPersonnesSelectionnees(personnesSelectionnees.filter(p => p !== personne));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Envoyer les données d'absence au serveur pour chaque personne sélectionnée\r\n    personnes.forEach(personne => {\r\n      const isSelected = personnesSelectionnees.includes(personne);\r\n      const motif = isSelected ? \"Oui\" : \"Non\";\r\n\r\n      axios.post(\"http://localhost:5000/ajouter-absence\", {\r\n        personne: personne.id,\r\n        motif\r\n      })\r\n      .then(res => {\r\n        // Mettre à jour l'état local avec les nouvelles données (si nécessaire)\r\n        // Réinitialiser les cases à cocher (si nécessaire)\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Gestion des absences</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Sélectionnez les personnes :</label>\r\n          {personnes.map((personne, index) => (\r\n            <div key={index}>\r\n              <input\r\n                type=\"checkbox\"\r\n                name={`personne-${personne.id}`}\r\n                checked={personnesSelectionnees.includes(personne)}\r\n                onChange={(e) => handleCheckboxChange(e, personne)}\r\n              />\r\n              {personne.nom} - {personnesSelectionnees.includes(personne) ? \"Oui\" : \"Non\"}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button type=\"submit\">Ajouter absence</button>\r\n      </form>\r\n      {/* Affichez les absences pour chaque personne ici */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GestionAbsences;\r\n"]},"metadata":{},"sourceType":"module"}